type: α
  value: a

type: β
  value: b

type: A -> B
  if:
    type A
    type B
  eliminator: E
    if:
      (A) <- E
    elimination-type: B
  value: \ X. -> M
    if:
      (A) |- (B) <- M
    reduction: M/[, E:A]
  eta: \ Y. -> Y
  
